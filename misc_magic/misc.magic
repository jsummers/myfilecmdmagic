
# "file command" rules for miscellaneous files
#
# By Jason Summers, 2024 - Not copyrighted

# ----------
# DIET-compressed data file

0       string/b    \xb4\x4c\xcd\x21\x9d\x89
>0      byte        x       DIET compressed file (v1.00-1.00d)

0       string/b    \x9d\x89\x64\x6c\x7a
>0      byte        x       DIET compressed file (v1.02b-1.20)

0       string/b    \xb4\x4c\xcd\x21\x9d\x89\x64\x6c\x7a
>0      byte        x       DIET compressed file (v1.44-1.45f)

# ----------
# Comic Chat

0       string/b   \x81\x00
>2      uleshort   >0x0000
>>2     uleshort   <0x0003
>>>4    uleshort   0x0001
# Value at offset 6 is a "tag". Tags for this version are
# believed to be from 0x0001 to 0x0009 (but we allow for more).
# We expect 0x0001 here.
>>>>6   uleshort   <0x0020
>>>>>0  byte       x  MS Comic Chat character (v1.0-2.1)

0       string/b   \x81\x81
>2      uleshort   >0x0000
>>2     uleshort   <0x0003
>>>4    uleshort   0x0002
# Value at offset 6 is a "tag". Tags for this version are
# believed to be from 0x0001 to 0x0107 (but we allow for more).
# We expect 0x0001 or 0x0107 here.
>>>>6   uleshort   <0x0120
>>>>>0  byte       x  MS Comic Chat character (v2.5)

0       string/b   \x81\x81\x03\x00\x02\x00
# Value at offset 6 is a "tag". Tags for this subtype are
# believed to be from 0x0001 to 0x0107 (but we allow for more).
# (Actually, only tags from 0x0102 to 0x0107 have been seen in
# background image files.)
# We expect 0x0103 or 0x0107 here.
>6      uleshort   <0x0120
>>0     byte       x  MS Comic Chat background (v2.5)

# ----------
# STOS

0       string/b   Lionpoubnk
>10     ubelong    0              STOS MBS
>10     ubelong    !0             STOS memory bank
>>14    ubyte      0x01           \b, type work
>>14    ubyte      0x02           \b, type screen
>>14    ubyte      0x82           \b, type datascreen
>>14    ubyte      0x84           \b, type set
>>>18   ubelong    0x06071963     \b, containing character set
>>14    ubyte      0x85           \b, type packed files
>>14    ubyte      0x81           \b, type data, containing
>>>18   clear      x
>>>18   ubelong    0x06071963     picture bank
>>>>22  ubeshort   x              \b, res %u
>>>18   ubelong    0x13490157     music bank
>>>18   ubelong    0x19861987     sprite bank
>>>18   ubelong    0x28091960     icon bank
>>>18   ubelong    0x4d414553     Maestro music
>>>18   default    x
>>>>18  ubelong    x              type 0x%08x

0       ubelong    0x06071963     STOS picture bank
>4      ubeshort   x              \b, res %u

0       ubelong    0x19861987     STOS sprite bank

# ----------
# REKO cardset

0       string/b    REKO
>8      ubyte       0           REKO cardset (Amiga)
>>20    ubyte       x           \b, %u-bit
>>18    ubyte       &0x08       \b, HAM
>>21    ubyte       x           \b, %u cards

0       string/b    PCREKO
>6      ubeshort    0x4420      REKO cardset (PC; RKP 8)
>>20    ubyte       x           \b, %u-bit
>>21    ubyte       x           \b, %u cards
>6      ubeshort    0x0000      REKO cardset (PC; RKP 16)
>>20    ubyte       x           \b, %u-bit
>>21    ubyte       x           \b, %u cards

0       string/b    PCRKP\x00   REKO cardset (PC; RKP 24)
>24     ubyte       x           \b, %u-bit
>8      ulelong     0           \b, JPEG
>8      ulelong     !0          \b, BMP
>28     ubyte       x           \b, %u cards

# Not a REKO format, but may be found with REKO files.
0       string/b    WizSolitaireDeck  Wiz Solitaire deck

# ----------
# PC Paint PIC

0       uleshort    0x1234
>11     ubyte       0xff
>>10    ubyte       0x01
>>>0    use         pcpaint_part2
>>10    ubyte       0x02
>>>0    use         pcpaint_part2
>>10    ubyte       0x04
>>>0    use         pcpaint_part2
>>10    ubyte       0x08
>>>0    use         pcpaint_part2
>>10    ubyte       0x11
>>>0    use         pcpaint_part2
>>10    ubyte       0x31
>>>0    use         pcpaint_part2

0       name        pcpaint_part2
>0      byte        x       PC Paint PIC
>0      clear       x
>12     ubyte       <0x30
>>0     use         pcpaint_image
>12     ubyte       >0x33
>>0     use         pcpaint_image
>0      default     x
>>0     byte        x       text data

0       name        pcpaint_image
>0      byte        x       image data
>2      uleshort    x       \b, %u x
>4      uleshort    x       %u
>10     ubyte       0x01    \b, 2-color
>10     ubyte       0x02    \b, 4-color
>10     ubyte       0x04    \b, 16-color
>10     ubyte       0x08    \b, 256-color
>10     ubyte       0x11    \b, 4-color planar
>10     ubyte       0x31    \b, 16-color planar

0       string/b    \xfd\x00\xb8\x00\x00
>5      uleshort    0
>>7     string      \x00\x40\x02\x00
>>>13   string      \x00\x20       PC Paint compressed BSAVE image data
>5      uleshort    !0
>>8007  string      PCPaint\ V1.   BSAVE image data (PC Paint extension)

# ----------
# Inset PIX

# There's no good way to identify all Inset PIX files, but we'll try to
# identify most files as they are constructed in practice.

# Expecting version 3.
0       uleshort    3
# First item in directory: Expecting id=0, len=32.
>4      string      \x00\x00\x20\x00
# Expecting the number of items to be relatively small.
>>2     uleshort    >3
>>>2    uleshort    <200
# Follow the first item's pointer. Make sure we can read 32
# bytes starting at that offset.
>>>>(8.l+31)    byte          x       Inset PIX
>>>>>(8.l+1)    ubyte&0x01    0x00    text data
>>>>>(8.l+1)    ubyte&0x01    0x01    image data
>>>>>>(8.l+18)  uleshort      x       \b, %u x
>>>>>>(8.l+20)  uleshort      x       %u

# ----------
# Storyboard PIC/CAP

0       string/b    EP_CAP    Storyboard PIC/CAP (old)
>7      ubyte   0x03    text screen capture
>7      ubyte   0x04    image data, 4-color
>7      ubyte   0x06    image data, 2-color
# (Other modes exist.)

2       ubyte   0xc1
>4      ubyte   0x00
>>0     ubyte   0x00
>>>0    use     storyboard_partn2
>>0     ubyte   0x54
>>>0    use     storyboard_partn2

0       name    storyboard_partn2
>1      string  \x84\xc1\x01
>>0     use     storyboard_partn3
>1      string  \x84\xc1\x03
>>0     use     storyboard_partn3
>1      string  \x84\xc1\x07
>>0     use     storyboard_partn3
>1      string  \x84\xc1\x08
>>0     use     storyboard_partn3
>1      string  \x85\xc1\x0a
>>0     use     storyboard_partn3
>1      string  \x86\xc1\x0b
>>0     use     storyboard_partn3

0       name    storyboard_partn3
>0      byte    x     Storyboard PIC/CAP (new) image data
>3      ubyte   0x01  \b, 640x200, 16-color
>3      ubyte   0x03  \b, 640x350, 16-color
>3      ubyte   0x07  \b, 640x480, 16-color
>3      ubyte   0x08  \b, 320x200, 4-color
>3      ubyte   0x0a  \b, 320x200, 256-color
>3      ubyte   0x0b  \b, 640x480, 256-color

# ----------
# BMP

0       string      BM
# bfOffBits shouldn't be too big
>10     ulelong     <2048

# BMPCOREHEADER
>>14        ulelong     12
# @22 = planes
>>>22       uleshort    1
# @24 = bitcount
>>>>24      uleshort    >0
>>>>>24     uleshort    <25
>>>>>>0     use         bmp_v2

# BMPINFOHEADER
>>14        ulelong     >15
# @26 = planes
>>>26      uleshort    1
# @28 = bitcount
>>>>28     uleshort    <65
>>>>>14    ulelong     <65
>>>>>>0    use         bmp_v3
>>>>>14    ulelong     68
>>>>>>0    use         bmp_pegasuspic
>>>>>14    ulelong     108
>>>>>>0    use         bmp_v3
>>>>>14    ulelong     124
>>>>>>0    use         bmp_v3

0       name      bmp_v2
>0      byte      x     BMP image data
>2      ulelong   26    \b, OS/2 v1
>2      ulelong   !26   \b, Windows v2 or OS/2 v1
>18     uleshort  x     \b, %u x
>20     uleshort  x     %u
>24     uleshort  x     \b, %u bits/pixel

0       name      bmp_v3
>0      byte      x       BMP image data

>0      clear     x
>14     ulelong   16      \b, OS/2 v2
>14     ulelong   24      \b, OS/2 v2
>14     ulelong   36      \b, OS/2 v2
>14     ulelong   40
>>2     ulelong   54      \b, OS/2 v2
>>2     ulelong   !54     \b, Windows v3
>14     ulelong   48      \b, OS/2 v2
>14     ulelong   56      \b, Windows v3+ (Photoshop variant)
>14     ulelong   64      \b, OS/2 v2
>14     ulelong   108     \b, Windows v4
>14     ulelong   124     \b, Windows v5
>0      default   x
>>0     byte      x       \b, v?

>0      use       bmp_dimensions_etc
# Header must be at least 20 bytes to have compression field.
>14     ulelong   >19
>>30    ulelong   >0
>>>30   ulelong   <3      \b, RLE compressed

# Pegasus PIC
0       name        bmp_pegasuspic
>30     string      JPEG    Pegasus PIC image data
>>0     use         bmp_dimensions_etc

# BMP - Print (v3 format) dimensions & bit count
0       name        bmp_dimensions_etc
>18     lelong      x       \b, %d x
>22     lelong      >-1     %d
>22     lelong      <0
>>22    lelong*-1   x       %d
>28     uleshort    !0
>>28    uleshort    x       \b, %u bits/pixel

# ----------
# OS/2 Bitmap array

0           string      BA
>14         string      BM

>>28        uleshort    12
# @36 = planes
>>>36       uleshort    1     OS/2 bitmap array
>>>>0       byte        x     \b, of bitmaps

>>28        uleshort    >15
>>>28       uleshort    <65
# @40 = planes
>>>>40      uleshort    1     OS/2 bitmap array
>>>>>0      byte        x     \b, of bitmaps

# ----------
# ARC archive, and related things

# There's not much magic to work with here.
# We won't try to detect rare or pathological files.

0     ubyte   0x1a

# ARC
>1    ubyte   >1
>>1   ubyte   <7
>>>0  use     arc_part2

# ARC & PAK
>1    ubyte   >7
>>1   ubyte   <12
>>>0  use     arc_part2

# ARC v7
>1    ubyte   20
>>2   ubyte   0
# ("part3" is not a typo)
>>>0  use     arc_part3

# Spark
>1    ubyte   0x82
>>0   use     arc_part2
>1    ubyte   0x83
>>0   use     arc_part2
>1    ubyte   0x88
>>0   use     arc_part2
>1    ubyte   0x89
>>0   use     arc_part2
>1    ubyte   0xff
>>0   use     arc_part2

# (test filename)
0        name    arc_part2

# Test 1st byte of filename
>2        ubyte   >0x20
>>2       ubyte   <0x7f

# Test 2nd byte of filename
>>>3      ubyte   0x00
>>>>0     use     arc_part3
>>>3      ubyte   >0x20
>>>>3     ubyte   <0x7f
>>>>>0    use     arc_part3

0       name      arc_part3
>1      ubyte     <9
>>1     string    \x03Descript\x00  BTSPK archive data
>>0     default   x
>>>0    byte      x       ARC archive data
>1      ubyte     9       ARC archive data (PKARC variant)
>1      ubyte     >9
>>1     ubyte     <12     ARC archive data (PAK variant)
>1      ubyte     20      ARC archive data (v7)
>1      ubyte     >0x7f   Spark archive data

# ----------
# PackIt (classic Mac format)

0       string    PMa
>3      ubyte     <0x37
>>3     ubyte     >0x30
>>>3    ubyte     !0x33
>>>>0   use       packit_part2
>3      ubyte     0x67
>>0     use       packit_part2

0       name      packit_part2
>0      byte      x      PackIt archive data
>>3     ubyte     0x34   \b, compressed
>>3     ubyte     0x67   \b, uncompressed

# ----------
# Aldus LZW and PKZP

0       string/b  ALDUS\x20
>6      string    PKZP    Aldus PKZP compressed file

>6      string    LZW     Aldus LZW compressed file
>>60    ubyte     0       \b, Windows
>>60    ubyte     >31     \b, Macintosh
>>>60   use       mac_type_creator
>>>82   ubyte     1       \b, resource fork only

# ----------
# InstallShield Z

0       string        \x13\x5d\x65\x8c\x3a\x01\x02\x00
>0      byte          x     InstallShield Z archive data
>12     uleshort      x     \b, %u file(s)
>14     lemsdosdate   x     \b, timestamp=[%s
>16     lemsdostime   x     %s]
>10     uleshort      0     \b, single-volume
>10     uleshort      1     \b, volume
>>31    ubyte         x     %u
>>30    ubyte         !0    of %u
>>30    ubyte         0     of ?

# ----------

0       name   mac_type_creator
>0      string/4  x       \b, type '%s'
>4      string/4  x       \b, creator '%s'
